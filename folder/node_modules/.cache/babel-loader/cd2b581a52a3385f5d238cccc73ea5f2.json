{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcheung/Development/code/phase-2/my-app/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SEARCH_ENDPOINT = 'https://api.spotify.com/v1/search/';\n\nfunction Search(_ref) {\n  _s();\n\n  let {\n    token,\n    setData\n  } = _ref;\n  const [searchInput, setSearchInput] = useState('');\n\n  const performSearch = async searchInput => {\n    const items = await searchQuery(token, 'track', searchInput);\n    console.log(items);\n    setData(items);\n  };\n\n  const searchQuery = async function (token) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'artist';\n    let query = arguments.length > 2 ? arguments[2] : undefined;\n    const {\n      data\n    } = await axios.get(SEARCH_ENDPOINT, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        q: query,\n        type: type\n      }\n    });\n    const items = Object.values(data)[0].items;\n    return items;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        performSearch(searchInput);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearchInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: 'submit',\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"6Eq05WFCbfVtzQf4MCSNdgDQaWk=\");\n\n_c = Search;\n\nconst HintResults = _ref2 => {\n  let {\n    artistsFound,\n    albumsFound,\n    songsFound\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"hint-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title-section\",\n          children: \"Artists\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), artistsFound.data.length > 0 ? artistsFound.data.map(artist => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/artist/${artist.id}`,\n          children: /*#__PURE__*/_jsxDEV(ItemResult, {\n            text: artist.name,\n            pic: artist.picture_small\n          }, artist.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"No Matches Were Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title-section\",\n          children: \"Albums\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), albumsFound.data.length > 0 ? albumsFound.data.map(album => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/album/${album.id}`,\n          children: /*#__PURE__*/_jsxDEV(ItemResult, {\n            text: album.title,\n            pic: album.cover_small\n          }, album.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"No Matches Were Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title-section\",\n          children: \"Songs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), songsFound.data.length > 0 ? songsFound.data.map(track => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/album/${track.album.id}`,\n          children: /*#__PURE__*/_jsxDEV(ItemResult, {\n            text: track.title_short,\n            pic: track.album.cover_small\n          }, track.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error\",\n          children: \"No Matches Were Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = HintResults;\nexport default Search;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Search\");\n$RefreshReg$(_c2, \"HintResults\");","map":{"version":3,"sources":["/Users/michaelcheung/Development/code/phase-2/my-app/src/components/Search.js"],"names":["React","useState","axios","SEARCH_ENDPOINT","Search","token","setData","searchInput","setSearchInput","performSearch","items","searchQuery","console","log","type","query","data","get","headers","Authorization","params","q","Object","values","e","preventDefault","target","value","HintResults","artistsFound","albumsFound","songsFound","length","map","artist","id","name","picture_small","album","title","cover_small","track","title_short"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst SEARCH_ENDPOINT = 'https://api.spotify.com/v1/search/';\n\nfunction Search({ token, setData }) {\n  const [searchInput, setSearchInput] = useState('');\n\n  const performSearch = async (searchInput) => {\n    const items = await searchQuery(token, 'track', searchInput);\n    console.log(items);\n    setData(items);\n  };\n\n  const searchQuery = async (token, type = 'artist', query) => {\n    const { data } = await axios.get(SEARCH_ENDPOINT, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n      params: {\n        q: query,\n        type: type,\n      },\n    });\n\n    const items = Object.values(data)[0].items;\n\n    return items;\n  };\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          performSearch(searchInput);\n        }}\n      >\n        <input type=\"text\" onChange={(e) => setSearchInput(e.target.value)} />\n        <button type={'submit'}>Search</button>\n      </form>\n    </div>\n  );\n}\n\n\n\nconst HintResults = ({ artistsFound, albumsFound, songsFound }) => {\n  return (\n    <div id=\"hint-container\">\n      <div>\n        <section>\n          <h3 className=\"title-section\">Artists</h3>\n          {artistsFound.data.length > 0 ? (\n            artistsFound.data.map((artist) => (\n              <Link to={`/artist/${artist.id}`}>\n                <ItemResult\n                  key={artist.id}\n                  text={artist.name}\n                  pic={artist.picture_small}\n                />\n              </Link>\n            ))\n          ) : (\n            <div className=\"error\">No Matches Were Found</div>\n          )}\n        </section>\n        <section>\n          <h3 className=\"title-section\">Albums</h3>\n          {albumsFound.data.length > 0 ? (\n            albumsFound.data.map((album) => (\n              <Link to={`/album/${album.id}`}>\n                <ItemResult\n                  key={album.id}\n                  text={album.title}\n                  pic={album.cover_small}\n                />\n              </Link>\n            ))\n          ) : (\n            <div className=\"error\">No Matches Were Found</div>\n          )}\n        </section>\n        <section>\n          <h3 className=\"title-section\">Songs</h3>\n          {songsFound.data.length > 0 ? (\n            songsFound.data.map((track) => (\n              <Link to={`/album/${track.album.id}`}>\n                <ItemResult\n                  key={track.id}\n                  text={track.title_short}\n                  pic={track.album.cover_small}\n                />\n              </Link>\n            ))\n          ) : (\n            <div className=\"error\">No Matches Were Found</div>\n          )}\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}