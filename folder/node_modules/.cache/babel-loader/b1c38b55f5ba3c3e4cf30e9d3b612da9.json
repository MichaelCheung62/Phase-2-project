{"ast":null,"code":"var _jsxFileName = \"/Users/michaelcheung/Development/code/phase-2/my-app/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { searchQuery } from '../spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Search(_ref) {\n  _s();\n\n  let {\n    token,\n    setTracks\n  } = _ref;\n  const [searchInput, setSearchInput] = useState('');\n  const [results, setResults] = useState([]);\n\n  const performSearch = async searchInput => {\n    const items = await searchQuery(token, 'track', searchInput);\n    console.log('test');\n    setResults([...items]);\n  };\n\n  const addTrack = e => {\n    console.log(e);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        performSearch(searchInput);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setSearchInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: 'submit',\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), results > 0 && results.map(result => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"result.title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 47\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"dM0iYZBr2+PlR6nKy4bUlxTWGlo=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/michaelcheung/Development/code/phase-2/my-app/src/components/Search.js"],"names":["React","useState","searchQuery","Search","token","setTracks","searchInput","setSearchInput","results","setResults","performSearch","items","console","log","addTrack","e","preventDefault","target","value","map","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,WAAT,QAA4B,YAA5B;;;AAEA,SAASC,MAAT,OAAsC;AAAA;;AAAA,MAAtB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAsB;AACpC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,aAAa,GAAG,MAAOJ,WAAP,IAAuB;AAC3C,UAAMK,KAAK,GAAG,MAAMT,WAAW,CAACE,KAAD,EAAQ,OAAR,EAAiBE,WAAjB,CAA/B;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAJ,IAAAA,UAAU,CAAC,CAAC,GAAGE,KAAJ,CAAD,CAAV;AACD,GAJD;;AAMA,QAAMG,QAAQ,GAAIC,CAAD,IAAO;AACtBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AACE,MAAA,QAAQ,EAAGA,CAAD,IAAO;AACfA,QAAAA,CAAC,CAACC,cAAF;AACAN,QAAAA,aAAa,CAACJ,WAAD,CAAb;AACD,OAJH;AAAA,8BAME;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAGS,CAAD,IAAOR,cAAc,CAACQ,CAAC,CAACE,MAAF,CAASC,KAAV;AAAlD;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAQ,QAAA,IAAI,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGV,OAAO,GAAG,CAAV,IAAeA,OAAO,CAACW,GAAR,CAAaC,MAAD,iBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAxB,CAVlB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA5BQjB,M;;KAAAA,M;AA8BT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport { searchQuery } from '../spotify';\n\nfunction Search({ token, setTracks }) {\n  const [searchInput, setSearchInput] = useState('');\n  const [results, setResults] = useState([]);\n\n  const performSearch = async (searchInput) => {\n    const items = await searchQuery(token, 'track', searchInput);\n    console.log('test');\n    setResults([...items]);\n  };\n\n  const addTrack = (e) => {\n    console.log(e);\n  };\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          performSearch(searchInput);\n        }}\n      >\n        <input type=\"text\" onChange={(e) => setSearchInput(e.target.value)} />\n        <button type={'submit'}>Search</button>\n      </form>\n      {results > 0 && results.map((result) => <div>result.title</div>)}\n    </div>\n  );\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}