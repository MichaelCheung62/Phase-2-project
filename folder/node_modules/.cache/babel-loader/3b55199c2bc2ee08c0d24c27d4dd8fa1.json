{"ast":null,"code":"import axios from 'axios'; // const CLIENT_ID = '96d861f15ff0490ab03a6b1df56db9b3';\n\nconst CLIENT_ID = '05d1f8b5f6bc4229a77310e45fa6fb4b';\nconst REDIRECT_URI = 'http://localhost:3000';\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\nconst RESPONSE_TYPE = 'token';\nexport const loginUrl = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`;\nconst SEARCH_ENDPOINT = 'https://api.spotify.com/v1/search/';\nconst ME_ENDPOINT = 'https://api.spotify.com/v1/me/';\nconst CATEGORIES_ENDPOINT = 'https://api.spotify.com/v1/browse/categories/';\nexport const getTokenFromUrl = () => {\n  const hash = window.location.hash;\n  if (!hash) return;\n  const token = hash.substring(1).split('&').find(element => element.startsWith('access_token')).split('=')[1];\n  return token;\n};\nexport const searchQuery = async function (token) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'artist';\n  let query = arguments.length > 2 ? arguments[2] : undefined;\n  const {\n    data\n  } = await axios.get(SEARCH_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    params: {\n      q: query,\n      type: type\n    }\n  });\n  const items = Object.values(data)[0].items;\n  console.log(items);\n  return items;\n};\nexport const getMe = async token => {\n  const {\n    data\n  } = await axios.get(ME_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  console.log(data);\n};\nexport const getCategories = async token => {\n  const {\n    data\n  } = await axios.get(CATEGORIES_ENDPOINT, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  console.log(data);\n};\nexport const getSongsInCategory = async (token, id) => {\n  const {\n    data\n  } = await axios.get(CATEGORIES_ENDPOINT + id + '/playlists', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  console.log(data);\n};","map":{"version":3,"sources":["/Users/michaelcheung/Development/code/phase-2/my-app/src/spotify.js"],"names":["axios","CLIENT_ID","REDIRECT_URI","AUTH_ENDPOINT","RESPONSE_TYPE","loginUrl","SEARCH_ENDPOINT","ME_ENDPOINT","CATEGORIES_ENDPOINT","getTokenFromUrl","hash","window","location","token","substring","split","find","element","startsWith","searchQuery","type","query","data","get","headers","Authorization","params","q","items","Object","values","console","log","getMe","getCategories","getSongsInCategory","id"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,SAAS,GAAG,kCAAlB;AACA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAMC,aAAa,GAAG,wCAAtB;AACA,MAAMC,aAAa,GAAG,OAAtB;AAEA,OAAO,MAAMC,QAAQ,GAAI,GAAEF,aAAc,cAAaF,SAAU,iBAAgBC,YAAa,kBAAiBE,aAAc,EAArH;AAEP,MAAME,eAAe,GAAG,oCAAxB;AACA,MAAMC,WAAW,GAAG,gCAApB;AACA,MAAMC,mBAAmB,GAAG,+CAA5B;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACjC,QAAMC,IAAI,GAAGC,MAAM,CAACC,QAAP,CAAgBF,IAA7B;AAEA,MAAI,CAACA,IAAL,EAAW;AAEX,QAAMG,KAAK,GAAGH,IAAI,CACbI,SADS,CACC,CADD,EAETC,KAFS,CAEH,GAFG,EAGTC,IAHS,CAGHC,OAAD,IAAaA,OAAO,CAACC,UAAR,CAAmB,cAAnB,CAHT,EAITH,KAJS,CAIH,GAJG,EAIE,CAJF,CAAd;AAMA,SAAOF,KAAP;AACH,CAZM;AAcP,OAAO,MAAMM,WAAW,GAAG,gBAAON,KAAP,EAAyC;AAAA,MAA3BO,IAA2B,uEAApB,QAAoB;AAAA,MAAVC,KAAU;AAChE,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMtB,KAAK,CAACuB,GAAN,CAAUjB,eAAV,EAA2B;AAC9CkB,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASZ,KAAM;AAD1B,KADqC;AAI9Ca,IAAAA,MAAM,EAAE;AACJC,MAAAA,CAAC,EAAEN,KADC;AAEJD,MAAAA,IAAI,EAAEA;AAFF;AAJsC,GAA3B,CAAvB;AAUA,QAAMQ,KAAK,GAAGC,MAAM,CAACC,MAAP,CAAcR,IAAd,EAAoB,CAApB,EAAuBM,KAArC;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,SAAOA,KAAP;AACH,CAhBM;AAkBP,OAAO,MAAMK,KAAK,GAAG,MAAOpB,KAAP,IAAiB;AAClC,QAAM;AAAES,IAAAA;AAAF,MAAW,MAAMtB,KAAK,CAACuB,GAAN,CAAUhB,WAAV,EAAuB;AAC1CiB,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASZ,KAAM;AAD1B;AADiC,GAAvB,CAAvB;AAMAkB,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACH,CARM;AAUP,OAAO,MAAMY,aAAa,GAAG,MAAOrB,KAAP,IAAiB;AAC1C,QAAM;AAAES,IAAAA;AAAF,MAAW,MAAMtB,KAAK,CAACuB,GAAN,CAAUf,mBAAV,EAA+B;AAClDgB,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASZ,KAAM;AAD1B;AADyC,GAA/B,CAAvB;AAMAkB,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACH,CARM;AAUP,OAAO,MAAMa,kBAAkB,GAAG,OAAOtB,KAAP,EAAcuB,EAAd,KAAqB;AACnD,QAAM;AAAEd,IAAAA;AAAF,MAAW,MAAMtB,KAAK,CAACuB,GAAN,CAAUf,mBAAmB,GAAG4B,EAAtB,GAA2B,YAArC,EAAmD;AACtEZ,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAG,UAASZ,KAAM;AAD1B;AAD6D,GAAnD,CAAvB;AAMAkB,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACH,CARM","sourcesContent":["import axios from 'axios';\n\n// const CLIENT_ID = '96d861f15ff0490ab03a6b1df56db9b3';\nconst CLIENT_ID = '05d1f8b5f6bc4229a77310e45fa6fb4b';\nconst REDIRECT_URI = 'http://localhost:3000';\nconst AUTH_ENDPOINT = 'https://accounts.spotify.com/authorize';\nconst RESPONSE_TYPE = 'token';\n\nexport const loginUrl = `${AUTH_ENDPOINT}?client_id=${CLIENT_ID}&redirect_uri=${REDIRECT_URI}&response_type=${RESPONSE_TYPE}`;\n\nconst SEARCH_ENDPOINT = 'https://api.spotify.com/v1/search/';\nconst ME_ENDPOINT = 'https://api.spotify.com/v1/me/';\nconst CATEGORIES_ENDPOINT = 'https://api.spotify.com/v1/browse/categories/';\n\nexport const getTokenFromUrl = () => {\n    const hash = window.location.hash;\n\n    if (!hash) return;\n\n    const token = hash\n        .substring(1)\n        .split('&')\n        .find((element) => element.startsWith('access_token'))\n        .split('=')[1];\n\n    return token;\n};\n\nexport const searchQuery = async (token, type = 'artist', query) => {\n    const { data } = await axios.get(SEARCH_ENDPOINT, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n        params: {\n            q: query,\n            type: type,\n        },\n    });\n\n    const items = Object.values(data)[0].items;\n\n    console.log(items);\n\n    return items;\n};\n\nexport const getMe = async (token) => {\n    const { data } = await axios.get(ME_ENDPOINT, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n\n    console.log(data);\n};\n\nexport const getCategories = async (token) => {\n    const { data } = await axios.get(CATEGORIES_ENDPOINT, {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n\n    console.log(data);\n};\n\nexport const getSongsInCategory = async (token, id) => {\n    const { data } = await axios.get(CATEGORIES_ENDPOINT + id + '/playlists', {\n        headers: {\n            Authorization: `Bearer ${token}`,\n        },\n    });\n\n    console.log(data);\n};\n"]},"metadata":{},"sourceType":"module"}